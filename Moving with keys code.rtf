{\rtf1\ansi\ansicpg1252\cocoartf1561\cocoasubrtf600
{\fonttbl\f0\fmodern\fcharset0 Courier;\f1\fmodern\fcharset0 Courier-Oblique;}
{\colortbl;\red255\green255\blue255;\red45\green173\blue192;\red32\green32\blue32;\red153\green168\blue186;
\red191\green100\blue38;\red133\green96\blue154;\red254\green187\blue91;\red94\green177\blue85;\red173\green169\blue32;
\red109\green109\blue109;}
{\*\expandedcolortbl;;\csgenericrgb\c17647\c67843\c75294;\csgenericrgb\c12549\c12549\c12549;\csgenericrgb\c60000\c65882\c72941;
\csgenericrgb\c74902\c39216\c14902;\csgenericrgb\c52157\c37647\c60392;\csgenericrgb\c99608\c73333\c35686;\csgenericrgb\c36863\c69412\c33333;\csgenericrgb\c67843\c66275\c12549;
\csgenericrgb\c42745\c42745\c42745;}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f0\fs26 \cf2 \cb3 import \cf4 org.academiadecodigo.simplegraphics.graphics.Movable\cf5 ;\
\cf2 import \cf4 org.academiadecodigo.simplegraphics.keyboard.Keyboard\cf5 ;\
\cf2 import \cf4 org.academiadecodigo.simplegraphics.keyboard.KeyboardEvent\cf5 ;\
\cf2 import \cf4 org.academiadecodigo.simplegraphics.keyboard.KeyboardEventType\cf5 ;\
\cf2 import \cf4 org.academiadecodigo.simplegraphics.keyboard.KeyboardHandler\cf5 ;\
\
\cf2 public class \cf4 Graf \cf2 implements \cf4 KeyboardHandler \{\
\
    \cf2 private \cf4 Movable \cf6 movable\cf5 ;\
    \cf4 KeyboardEvent \cf6 left \cf4 = \cf2 new \cf4 KeyboardEvent()\cf5 ;\
    \cf4 KeyboardEvent \cf6 right \cf4 = \cf2 new \cf4 KeyboardEvent()\cf5 ;\
    \cf4 KeyboardEvent \cf6 down \cf4 = \cf2 new \cf4 KeyboardEvent()\cf5 ;\
    \cf4 KeyboardEvent \cf6 up \cf4 = \cf2 new \cf4 KeyboardEvent()\cf5 ;\
\
    \cf2 public \cf7 Graf\cf4 (Movable movable) \{\
        \cf2 this\cf4 .\cf6 movable \cf4 = movable\cf5 ;\
        \cf4 moves()\cf5 ;\
\
\
    \cf4 \}\
\
    \cf2 public void \cf7 moves\cf4 ()\{\
        Keyboard keyboard = \cf2 new \cf4 Keyboard(\cf2 this\cf4 )\cf5 ;\
\
        \cf6 down\cf4 .setKeyboardEventType(KeyboardEventType.
\f1\i \cf6 KEY_PRESSED
\f0\i0 \cf4 )\cf5 ;\
        \cf6 down\cf4 .setKey(KeyboardEvent.
\f1\i \cf6 KEY_DOWN
\f0\i0 \cf4 )\cf5 ;\
        \cf4 keyboard.addEventListener(\cf6 down\cf4 )\cf5 ;\
\
        \cf6 up\cf4 .setKeyboardEventType(KeyboardEventType.
\f1\i \cf6 KEY_PRESSED
\f0\i0 \cf4 )\cf5 ;\
        \cf6 up\cf4 .setKey(KeyboardEvent.
\f1\i \cf6 KEY_UP
\f0\i0 \cf4 )\cf5 ;\
        \cf4 keyboard.addEventListener(\cf6 up\cf4 )\cf5 ;\
\
        \cf6 right\cf4 .setKeyboardEventType(KeyboardEventType.
\f1\i \cf6 KEY_PRESSED
\f0\i0 \cf4 )\cf5 ;\
        \cf6 right\cf4 .setKey(KeyboardEvent.
\f1\i \cf6 KEY_RIGHT
\f0\i0 \cf4 )\cf5 ;\
        \cf4 keyboard.addEventListener(\cf6 right\cf4 )\cf5 ;\
\
        \cf6 left\cf4 .setKeyboardEventType(KeyboardEventType.
\f1\i \cf6 KEY_PRESSED
\f0\i0 \cf4 )\cf5 ;\
        \cf6 left\cf4 .setKey(KeyboardEvent.
\f1\i \cf6 KEY_LEFT
\f0\i0 \cf4 )\cf5 ;\
        \cf4 keyboard.addEventListener(\cf6 left\cf4 )\cf5 ;\
\
    \cf4 \}\
\
    \cf2 public void \cf7 moving\cf4 (KeyboardEvent keyboardEvent)\{\
\
        \cf2 if\cf4 (keyboardEvent == \cf6 down\cf4 )\{\
            \cf6 movable\cf4 .translate(\cf8 0\cf5 ,\cf8 15\cf4 )\cf5 ;\
        \cf4 \} \cf2 else if \cf4 (keyboardEvent == \cf6 up\cf4 )\{\
            \cf6 movable\cf4 .translate(\cf8 0\cf5 ,\cf4 -\cf8 15\cf4 )\cf5 ;\
        \cf4 \} \cf2 else if \cf4 (keyboardEvent == \cf6 right\cf4 )\{\
            \cf6 movable\cf4 .translate(\cf8 15\cf5 ,\cf8 0\cf4 )\cf5 ;\
        \cf4 \} \cf2 else \cf4 \{\
            \cf6 movable\cf4 .translate(-\cf8 15\cf5 ,\cf8 0\cf4 )\cf5 ;\
        \cf4 \}\
    \}\
\
    \cf9 @Override\
    \cf2 public void \cf7 keyPressed\cf4 (KeyboardEvent keyboardEvent) \{\
            moving(keyboardEvent)\cf5 ;\
\
\
\
    \cf4 \}\
\
    \cf9 @Override\
    \cf2 public void \cf7 keyReleased\cf4 (KeyboardEvent keyboardEvent) \{\
      \cf10 //  movable.translate(-5,-5);\
    \cf4 \}\
\}\
\
}